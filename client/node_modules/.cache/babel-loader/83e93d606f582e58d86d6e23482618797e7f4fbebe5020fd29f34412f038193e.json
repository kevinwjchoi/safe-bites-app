{"ast":null,"code":"var _jsxFileName = \"/Users/kevinchoi/Development/se-prep/phase-5/safe-bites-app/client/src/UserContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\nimport React, { createContext, useState, useContext } from 'react';\n\n// Create context\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserContext = /*#__PURE__*/createContext();\nconst UserDispatchContext = /*#__PURE__*/createContext();\n\n// Create a provider component\nexport const UserProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [status, setStatus] = useState('idle');\n  const [error, setError] = useState(null);\n  return /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n    value: {\n      user,\n      status,\n      error\n    },\n    children: /*#__PURE__*/_jsxDEV(UserDispatchContext.Provider, {\n      value: {\n        setUser,\n        setStatus,\n        setError\n      },\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n\n// Custom hooks for using context\n_s(UserProvider, \"/cap5opPDcyu6454VT7C5qiCPLk=\");\n_c = UserProvider;\nexport const useUserState = () => {\n  _s2();\n  return useContext(UserContext);\n};\n_s2(useUserState, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const useUserDispatch = () => {\n  _s3();\n  return useContext(UserDispatchContext);\n};\n_s3(useUserDispatch, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"UserProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","jsxDEV","_jsxDEV","UserContext","UserDispatchContext","UserProvider","children","_s","user","setUser","status","setStatus","error","setError","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useUserState","_s2","useUserDispatch","_s3","$RefreshReg$"],"sources":["/Users/kevinchoi/Development/se-prep/phase-5/safe-bites-app/client/src/UserContext.js"],"sourcesContent":["import React, { createContext, useState, useContext } from 'react';\n\n// Create context\nconst UserContext = createContext();\nconst UserDispatchContext = createContext();\n\n// Create a provider component\nexport const UserProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n  const [status, setStatus] = useState('idle');\n  const [error, setError] = useState(null);\n\n  return (\n    <UserContext.Provider value={{ user, status, error }}>\n      <UserDispatchContext.Provider value={{ setUser, setStatus, setError }}>\n        {children}\n      </UserDispatchContext.Provider>\n    </UserContext.Provider>\n  );\n};\n\n// Custom hooks for using context\nexport const useUserState = () => useContext(UserContext);\nexport const useUserDispatch = () => useContext(UserDispatchContext);\n"],"mappings":";;;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,UAAU,QAAQ,OAAO;;AAElE;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,WAAW,gBAAGL,aAAa,CAAC,CAAC;AACnC,MAAMM,mBAAmB,gBAAGN,aAAa,CAAC,CAAC;;AAE3C;AACA,OAAO,MAAMO,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACW,MAAM,EAAEC,SAAS,CAAC,GAAGZ,QAAQ,CAAC,MAAM,CAAC;EAC5C,MAAM,CAACa,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAExC,oBACEG,OAAA,CAACC,WAAW,CAACW,QAAQ;IAACC,KAAK,EAAE;MAAEP,IAAI;MAAEE,MAAM;MAAEE;IAAM,CAAE;IAAAN,QAAA,eACnDJ,OAAA,CAACE,mBAAmB,CAACU,QAAQ;MAACC,KAAK,EAAE;QAAEN,OAAO;QAAEE,SAAS;QAAEE;MAAS,CAAE;MAAAP,QAAA,EACnEA;IAAQ;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACmB;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACX,CAAC;AAE3B,CAAC;;AAED;AAAAZ,EAAA,CAdaF,YAAY;AAAAe,EAAA,GAAZf,YAAY;AAezB,OAAO,MAAMgB,YAAY,GAAGA,CAAA;EAAAC,GAAA;EAAA,OAAMtB,UAAU,CAACG,WAAW,CAAC;AAAA;AAACmB,GAAA,CAA7CD,YAAY;AACzB,OAAO,MAAME,eAAe,GAAGA,CAAA;EAAAC,GAAA;EAAA,OAAMxB,UAAU,CAACI,mBAAmB,CAAC;AAAA;AAACoB,GAAA,CAAxDD,eAAe;AAAA,IAAAH,EAAA;AAAAK,YAAA,CAAAL,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}