{"ast":null,"code":"var _jsxFileName = \"/Users/kevinchoi/Development/se-prep/phase-5/safe-bites-app/client/src/components/LoginForm.js\";\nimport React from 'react';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport { TextField, Button, Box, Typography } from '@mui/material';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CustomTextField = ({\n  label,\n  ...props\n}) => /*#__PURE__*/_jsxDEV(Field, {\n  name: props.name,\n  as: TextField,\n  label: label,\n  variant: \"outlined\",\n  margin: \"normal\",\n  fullWidth: true,\n  helperText: /*#__PURE__*/_jsxDEV(ErrorMessage, {\n    name: props.name\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 17\n  }, this),\n  error: Boolean(props.touched && props.errors),\n  ...props\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 8,\n  columnNumber: 3\n}, this);\n_c = CustomTextField;\nconst LoginForm = ({\n  onSubmit\n}) => /*#__PURE__*/_jsxDEV(Formik, {\n  initialValues: {\n    username: '',\n    password: ''\n  },\n  validationSchema: Yup.object({\n    username: Yup.string().required('Username is required'),\n    password: Yup.string().required('Password is required')\n  }),\n  onSubmit: onSubmit,\n  children: ({\n    handleSubmit,\n    errors,\n    touched,\n    isSubmitting\n  }) => /*#__PURE__*/_jsxDEV(Form, {\n    onSubmit: handleSubmit,\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        maxWidth: 600,\n        margin: 'auto',\n        padding: 2\n      },\n      children: [/*#__PURE__*/_jsxDEV(CustomTextField, {\n        name: \"username\",\n        label: \"Username\",\n        type: \"text\",\n        helperText: /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          name: \"username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 25\n        }, this),\n        error: Boolean(touched.username && errors.username)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(CustomTextField, {\n        name: \"password\",\n        label: \"Password\",\n        type: \"password\",\n        helperText: /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          name: \"password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 25\n        }, this),\n        error: Boolean(touched.password && errors.password)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        variant: \"contained\",\n        color: \"primary\",\n        sx: {\n          mt: 2,\n          width: '100%'\n        },\n        disabled: isSubmitting,\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        align: \"center\",\n        sx: {\n          mt: 2\n        },\n        children: [\"Don't have an account yet?\", ' ', /*#__PURE__*/_jsxDEV(Button, {\n          component: Link,\n          to: \"/signup\",\n          variant: \"text\",\n          children: \"Sign Up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 7\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 22,\n  columnNumber: 3\n}, this);\n_c2 = LoginForm;\nexport default LoginForm;\nvar _c, _c2;\n$RefreshReg$(_c, \"CustomTextField\");\n$RefreshReg$(_c2, \"LoginForm\");","map":{"version":3,"names":["React","Formik","Form","Field","ErrorMessage","Yup","TextField","Button","Box","Typography","Link","jsxDEV","_jsxDEV","CustomTextField","label","props","name","as","variant","margin","fullWidth","helperText","fileName","_jsxFileName","lineNumber","columnNumber","error","Boolean","touched","errors","_c","LoginForm","onSubmit","initialValues","username","password","validationSchema","object","string","required","children","handleSubmit","isSubmitting","sx","maxWidth","padding","type","color","mt","width","disabled","align","component","to","_c2","$RefreshReg$"],"sources":["/Users/kevinchoi/Development/se-prep/phase-5/safe-bites-app/client/src/components/LoginForm.js"],"sourcesContent":["import React from 'react';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport { TextField, Button, Box, Typography } from '@mui/material';\nimport { Link } from 'react-router-dom';\n\nconst CustomTextField = ({ label, ...props }) => (\n  <Field\n    name={props.name}\n    as={TextField}\n    label={label}\n    variant=\"outlined\"\n    margin=\"normal\"\n    fullWidth\n    helperText={<ErrorMessage name={props.name} />}\n    error={Boolean(props.touched && props.errors)}\n    {...props}\n  />\n);\n\nconst LoginForm = ({ onSubmit }) => (\n  <Formik\n    initialValues={{ username: '', password: '' }}\n    validationSchema={Yup.object({\n      username: Yup.string().required('Username is required'),\n      password: Yup.string().required('Password is required'),\n    })}\n    onSubmit={onSubmit}\n  >\n    {({ handleSubmit, errors, touched, isSubmitting }) => (\n      <Form onSubmit={handleSubmit}>\n        <Box sx={{ maxWidth: 600, margin: 'auto', padding: 2 }}>\n          <CustomTextField\n            name=\"username\"\n            label=\"Username\"\n            type=\"text\"\n            helperText={<ErrorMessage name=\"username\" />}\n            error={Boolean(touched.username && errors.username)}\n          />\n          <CustomTextField\n            name=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            helperText={<ErrorMessage name=\"password\" />}\n            error={Boolean(touched.password && errors.password)}\n          />\n          <Button\n            type=\"submit\"\n            variant=\"contained\"\n            color=\"primary\"\n            sx={{ mt: 2, width: '100%' }}\n            disabled={isSubmitting}\n          >\n            Login\n          </Button>\n          <Typography variant=\"body2\" align=\"center\" sx={{ mt: 2 }}>\n            Don't have an account yet?{' '}\n            <Button component={Link} to=\"/signup\" variant=\"text\">\n              Sign Up\n            </Button>\n          </Typography>\n        </Box>\n      </Form>\n    )}\n  </Formik>\n);\n\nexport default LoginForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}