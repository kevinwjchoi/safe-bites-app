{"ast":null,"code":"var _jsxFileName = \"/Users/kevinchoi/Development/se-prep/phase-5/safe-bites-app/client/src/RestaurantContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useCallback } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RestaurantContext = /*#__PURE__*/createContext();\nconst RestaurantDispatchContext = /*#__PURE__*/createContext();\nexport const RestaurantProvider = ({\n  children\n}) => {\n  _s();\n  const [restaurants, setRestaurants] = useState([]);\n  const [status, setStatus] = useState('idle');\n  const [error, setError] = useState(null);\n  const fetchRestaurants = useCallback(async query => {\n    setStatus('loading');\n    setError(null);\n    try {\n      const response = await fetch(`/restaurants/search?query=${query}`);\n      if (!response.ok) {\n        throw new Error('Failed to fetch restaurants');\n      }\n      const data = await response.json();\n      setRestaurants(data.results);\n      setStatus('succeeded');\n    } catch (err) {\n      setError(err.message);\n      setStatus('failed');\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(RestaurantContext.Provider, {\n    value: {\n      restaurants,\n      status,\n      error\n    },\n    children: /*#__PURE__*/_jsxDEV(RestaurantDispatchContext.Provider, {\n      value: {\n        fetchRestaurants\n      },\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(RestaurantProvider, \"e5QikMztEXDALZHrYIEv8rejcmc=\");\n_c = RestaurantProvider;\nexport const useRestaurantState = () => {\n  _s2();\n  return useContext(RestaurantContext);\n};\n_s2(useRestaurantState, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const useRestaurantDispatch = () => {\n  _s3();\n  return useContext(RestaurantDispatchContext);\n};\n_s3(useRestaurantDispatch, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"RestaurantProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useCallback","jsxDEV","_jsxDEV","RestaurantContext","RestaurantDispatchContext","RestaurantProvider","children","_s","restaurants","setRestaurants","status","setStatus","error","setError","fetchRestaurants","query","response","fetch","ok","Error","data","json","results","err","message","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useRestaurantState","_s2","useRestaurantDispatch","_s3","$RefreshReg$"],"sources":["/Users/kevinchoi/Development/se-prep/phase-5/safe-bites-app/client/src/RestaurantContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useCallback } from 'react';\n\nconst RestaurantContext = createContext();\nconst RestaurantDispatchContext = createContext();\n\nexport const RestaurantProvider = ({ children }) => {\n  const [restaurants, setRestaurants] = useState([]);\n  const [status, setStatus] = useState('idle');\n  const [error, setError] = useState(null);\n\n  const fetchRestaurants = useCallback(async (query) => {\n    setStatus('loading');\n    setError(null);\n    try {\n      const response = await fetch(`/restaurants/search?query=${query}`);\n      if (!response.ok) {\n        throw new Error('Failed to fetch restaurants');\n      }\n      const data = await response.json();\n      setRestaurants(data.results);\n      setStatus('succeeded');\n    } catch (err) {\n      setError(err.message);\n      setStatus('failed');\n    }\n  }, []);\n\n  return (\n    <RestaurantContext.Provider value={{ restaurants, status, error }}>\n      <RestaurantDispatchContext.Provider value={{ fetchRestaurants }}>\n        {children}\n      </RestaurantDispatchContext.Provider>\n    </RestaurantContext.Provider>\n  );\n};\n\nexport const useRestaurantState = () => useContext(RestaurantContext);\nexport const useRestaurantDispatch = () => useContext(RestaurantDispatchContext);\n"],"mappings":";;;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,WAAW,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhF,MAAMC,iBAAiB,gBAAGN,aAAa,CAAC,CAAC;AACzC,MAAMO,yBAAyB,gBAAGP,aAAa,CAAC,CAAC;AAEjD,OAAO,MAAMQ,kBAAkB,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAClD,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACW,MAAM,EAAEC,SAAS,CAAC,GAAGZ,QAAQ,CAAC,MAAM,CAAC;EAC5C,MAAM,CAACa,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAMe,gBAAgB,GAAGd,WAAW,CAAC,MAAOe,KAAK,IAAK;IACpDJ,SAAS,CAAC,SAAS,CAAC;IACpBE,QAAQ,CAAC,IAAI,CAAC;IACd,IAAI;MACF,MAAMG,QAAQ,GAAG,MAAMC,KAAK,CAAC,6BAA6BF,KAAK,EAAE,CAAC;MAClE,IAAI,CAACC,QAAQ,CAACE,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;MAChD;MACA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;MAClCZ,cAAc,CAACW,IAAI,CAACE,OAAO,CAAC;MAC5BX,SAAS,CAAC,WAAW,CAAC;IACxB,CAAC,CAAC,OAAOY,GAAG,EAAE;MACZV,QAAQ,CAACU,GAAG,CAACC,OAAO,CAAC;MACrBb,SAAS,CAAC,QAAQ,CAAC;IACrB;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,oBACET,OAAA,CAACC,iBAAiB,CAACsB,QAAQ;IAACC,KAAK,EAAE;MAAElB,WAAW;MAAEE,MAAM;MAAEE;IAAM,CAAE;IAAAN,QAAA,eAChEJ,OAAA,CAACE,yBAAyB,CAACqB,QAAQ;MAACC,KAAK,EAAE;QAAEZ;MAAiB,CAAE;MAAAR,QAAA,EAC7DA;IAAQ;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACyB;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACX,CAAC;AAEjC,CAAC;AAACvB,EAAA,CA7BWF,kBAAkB;AAAA0B,EAAA,GAAlB1B,kBAAkB;AA+B/B,OAAO,MAAM2B,kBAAkB,GAAGA,CAAA;EAAAC,GAAA;EAAA,OAAMnC,UAAU,CAACK,iBAAiB,CAAC;AAAA;AAAC8B,GAAA,CAAzDD,kBAAkB;AAC/B,OAAO,MAAME,qBAAqB,GAAGA,CAAA;EAAAC,GAAA;EAAA,OAAMrC,UAAU,CAACM,yBAAyB,CAAC;AAAA;AAAC+B,GAAA,CAApED,qBAAqB;AAAA,IAAAH,EAAA;AAAAK,YAAA,CAAAL,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}